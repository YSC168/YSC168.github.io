{"version":3,"file":"index-legacy.a77532da.js","sources":["../../vite/modulepreload-polyfill","../../preact/jsx-runtime","../../src/components/BackspaceIcon.jsx","../../src/components/CloseIcon.jsx","../../src/utils/alert.js","../../src/utils/copy.js","../../src/utils/fireEvent.js","../../src/components/CodeInput.jsx","../../src/components/Countdown.jsx","../../src/components/FacebookIcon.jsx","../../src/components/InfoIcon.jsx","../../src/components/KebabIcon.jsx","../../src/components/PlayIcon.jsx","../../src/components/ShareIcon.jsx","../../src/utils/prefersColorSchemeSupported.jsx","../../src/components/DownloadIcon.jsx","../../src/components/ShareImageButton.jsx","../../src/components/Tile.jsx","../../src/components/TwitterIcon.jsx","../../src/constants.js","../../src/utils/LS.js","../../src/components/VolumeSlider.jsx","../../src/utils/blastConfetti.js","../../src/app.jsx","../../sounds/keypress-standard.mp3","../../sounds/keypress-delete.mp3","../../sounds/keypress-return.mp3","../../src/main.jsx","../../src/utils/compareWords.js","../../src/utils/usePageVisibility.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as jsxRuntime from \"/home/runner/work/chengyu-wordle/chengyu-wordle/node_modules/preact/jsx-runtime/dist/jsxRuntime.js\"\nexport const jsx = jsxRuntime.jsx\nexport const jsxs = jsxRuntime.jsxs\nexport const Fragment = jsxRuntime.Fragment","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"></path>\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" {...props}>\n    <title>✖️</title>\n    <path\n      fill=\"currentColor\"\n      d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n    ></path>\n  </svg>\n);\n","import toast from 'react-hot-toast';\n\nexport default (text) => toast(text);\n","import { toClipboard } from 'copee';\n\nexport default (text, fn = () => {}) => {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    navigator.clipboard\n      .writeText(text)\n      .then(fn)\n      .catch((e) => {});\n  } else {\n    toClipboard(text);\n    fn();\n  }\n};\n","export default (...props) => {\n  if (window.plausible) {\n    plausible(...props);\n  }\n};\n","import { useTranslation } from 'react-i18next';\n\nimport alert from '../utils/alert';\nimport copy from '../utils/copy';\nimport fireEvent from '../utils/fireEvent';\n\nexport default ({ code, url }) => {\n  const { t } = useTranslation();\n  return (\n    code && (\n      <input\n        type=\"text\"\n        readOnly\n        value={code}\n        class=\"idiom-code\"\n        onClick={(e) => {\n          e.target.focus();\n          e.target.select();\n          copy(url || code, () => {\n            alert(t('ui.copiedURL'));\n          });\n          fireEvent('Click: Share', {\n            props: {\n              type: 'idiom-code',\n            },\n          });\n        }}\n      />\n    )\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\nimport { useTranslation } from 'react-i18next';\n\n// Component that shows hours, minutes and seconds counting down to start of next day\nexport default () => {\n  const { t } = useTranslation();\n  let nextDay = new Date().setHours(0, 0, 0, 0) + 24 * 60 * 60 * 1000;\n  const [hours, setHours] = useState('00');\n  const [minutes, setMinutes] = useState('00');\n  const [seconds, setSeconds] = useState('00');\n  const [isNow, setIsNow] = useState(false);\n  // update countdown every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const diff = nextDay - new Date();\n      if (diff <= 0) {\n        setIsNow(true);\n        clearInterval(timer);\n        return;\n      }\n      setHours(\n        Math.floor(diff / (1000 * 60 * 60))\n          .toString()\n          .padStart(2, '0'),\n      );\n      setMinutes(\n        Math.floor((diff / (1000 * 60)) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n      setSeconds(\n        Math.floor((diff / 1000) % 60)\n          .toString()\n          .padStart(2, '0'),\n      );\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  if (isNow) {\n    return <a href=\"./\">{t('ui.countdownNow')}</a>;\n  }\n  return (\n    <time class=\"countdown\">\n      {hours}:{minutes}:{seconds}\n    </time>\n  );\n};\n","export default (props) => (\n  <svg viewBox=\"0 0 96.1 96.1\" fill=\"currentColor\" {...props}>\n    <title>Facebook</title>\n    <path d=\"M72 0H59.7c-14 0-23 9.3-23 23.7v10.9H24c-1 0-2 .8-2 2v15.7c0 1.1 1 2 2 2h12.6v39.9c0 1 .8 2 2 2h16.3c1 0 2-1 2-2v-40h14.6c1 0 2-.8 2-1.9V36.5a2 2 0 0 0-2-2H56.8v-9.2c0-4.4 1.1-6.7 6.9-6.7H72c1 0 2-.9 2-2V2c0-1.1-1-2-2-2z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" {...props}>\n    <title>ℹ️</title>\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n    />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 290 290\" fill=\"currentColor\" {...props}>\n    <title>...</title>\n    <path d=\"M255 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM35 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70zM145 110a35 35 0 1 0 0 70 35 35 0 0 0 0-70z\" />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" {...props}>\n    <title>▶️</title>\n    <path\n      fill-rule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\n      clip-rule=\"evenodd\"\n    />\n  </svg>\n);\n","export default (props) => (\n  <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n    <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"></path>\n  </svg>\n);\n","export default 'matchMedia' in window &&\n  window.matchMedia('(prefers-color-scheme: dark)').media !== 'not all';\n","export default (props) => (\n  <svg viewBox=\"0 0 330 330\" fill=\"currentColor\" {...props}>\n    <title>⬇️</title>\n    <path d=\"m154 256 1 1h2v1h1l1 1h2v1h8v-1h2l1-1h1v-1h2l1-1 70-70a15 15 0 0 0-22-22l-44 45V25a15 15 0 0 0-30 0v184l-44-45a15 15 0 1 0-22 22z\" />\n    <path d=\"M315 160c-8 0-15 7-15 15v115H30V175a15 15 0 0 0-30 0v130c0 8 7 15 15 15h300c8 0 15-7 15-15V175c0-8-7-15-15-15z\" />\n  </svg>\n);\n","import { toJpeg } from 'html-to-image';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport fireEvent from '../utils/fireEvent';\nimport prefersColorSchemeSupported from '../utils/prefersColorSchemeSupported';\nimport DownloadIcon from './DownloadIcon';\n\nexport default ({ header, footer, boardStates, id }) => {\n  const { t } = useTranslation();\n  const imageRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const imageOpts = {\n    canvasWidth: 1080,\n    canvasHeight: 1080,\n    quality: 0.5,\n  };\n\n  // Update image when light/dark mode kicks in\n  const [mediaChanged, setMediaChanged] = useState();\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const media = window.matchMedia('(prefers-color-scheme: dark)');\n    const colorSchemeChange = (event) => {\n      setMediaChanged(event.matches);\n    };\n    try {\n      media.addEventListener('change', colorSchemeChange);\n    } catch (e) {\n      media.addListener(colorSchemeChange);\n    }\n    return () => {\n      try {\n        media.removeEventListener('change', colorSchemeChange);\n      } catch (e) {\n        media.removeListener(colorSchemeChange);\n      }\n    };\n  });\n\n  useEffect(() => {\n    let isSubscribed = true;\n    setImageSrc(null);\n    toJpeg(imageRef.current, imageOpts)\n      .then((dataURL) => {\n        if (isSubscribed) setImageSrc(dataURL);\n      })\n      .catch((e) => {\n        if (isSubscribed) setImageSrc(null);\n      });\n    return () => {\n      isSubscribed = false;\n    };\n  }, [boardStates, id, mediaChanged]);\n\n  const fileName = `chengyu-wordle-${id}.jpg`;\n\n  return (\n    <>\n      {!!imageSrc && (\n        <a\n          id=\"share-image-button\"\n          class=\"button\"\n          href={imageSrc}\n          download={fileName}\n          target=\"_blank\"\n          onClick={() => {\n            fireEvent('Click: Share', {\n              props: {\n                type: 'image',\n              },\n            });\n          }}\n        >\n          {t('common.image')} <DownloadIcon width=\"12\" height=\"12\" />\n        </a>\n      )}\n      <div id=\"share-image-container\">\n        <div id=\"share-image\" ref={imageRef}>\n          <p class=\"header\">\n            <b>{header}</b>\n          </p>\n          <div class=\"board\">\n            {boardStates.map((row) => {\n              return (\n                <div>\n                  {row.map((letter) => {\n                    return <span class={`tile ${letter}`} />;\n                  })}\n                </div>\n              );\n            })}\n          </div>\n          <p class=\"footer\">{footer}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { pinyin } from 'pinyin-pro/lib/pinyin';\n\nconst py = pinyin;\n\nexport default ({ letter, pinyin, state }) => {\n  return (\n    <div\n      class={`letter ${letter ? 'lettered' : ''} ${state ?? ''} ${\n        state ? '🌈' : ''\n      }`}\n    >\n      <ruby>\n        {letter || <span style={{ opacity: 0 }}>一</span>}\n        <rp>(</rp>\n        <rt>{pinyin || py(letter) || <>&nbsp;</>}</rt>\n        <rp>)</rp>\n      </ruby>\n    </div>\n  );\n};\n","export default (props) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\" {...props}>\n      <title>{props.title}</title>\n      <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\" />\n    </svg>\n  );\n};\n","export const KEY_PREFIX = 'cywd-';\n","// Always need to wrap localStorage in a try/catch block because\n// it can throw an exception in some browsers (e.g. Safari)\nconst LS = {\n  getItem: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n  setItem: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      return null;\n    }\n  },\n  removeItem: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      return null;\n    }\n  },\n};\n\nexport default LS;\n","import { Howler } from 'howler';\nimport { useState } from 'preact/hooks';\n\nimport { KEY_PREFIX } from '../constants';\nimport LS from '../utils/LS';\n\nexport default (props) => {\n  const [volume, setVolume] = useState(Howler.volume());\n  return (\n    <span>\n      {volume > 0.66 ? '🔊' : volume > 0.33 ? '🔉' : volume > 0 ? '🔈' : '🔇'}{' '}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step=\"0.1\"\n        value={volume}\n        onChange={(e) => {\n          const value = +e.target.value;\n          if (isNaN(value)) return;\n          Howler.volume(value);\n          setVolume(value);\n          LS.setItem(`${KEY_PREFIX}volume`, value);\n        }}\n        {...props}\n      />\n    </span>\n  );\n};\n","import confetti from 'canvas-confetti';\n\nexport default () => {\n  const end = Date.now() + 2 * 1000;\n  const colors = ['#008000', '#FFA500'];\n\n  (function frame() {\n    confetti({\n      particleCount: 2,\n      angle: 60,\n      spread: 80,\n      origin: { x: 0, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    confetti({\n      particleCount: 2,\n      angle: 120,\n      spread: 80,\n      origin: { x: 1, y: 1 },\n      colors: colors,\n      shapes: ['square'],\n      disableForReducedMotion: true,\n    });\n    if (Date.now() < end) {\n      requestAnimationFrame(frame);\n    }\n  })();\n};\n","import 'core-js/es/array/find-index';\nimport 'core-js/es/array/from';\n\nimport { Howl, Howler } from 'howler';\nimport { pinyin } from 'pinyin-pro/lib/pinyin';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport Switch from 'rc-switch';\nimport { Toaster, toast, useToasterStore } from 'react-hot-toast';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport idiomsTxt from '../game-data/all-idioms.txt?raw';\nimport gameIdioms from '../game-data/game-idioms.csv';\n\nimport keypressDeleteMp3 from '../sounds/keypress-delete.mp3';\nimport keypressReturnMp3 from '../sounds/keypress-return.mp3';\nimport keypressStandardMp3 from '../sounds/keypress-standard.mp3';\n\nimport BackspaceIcon from './components/BackspaceIcon';\nimport CloseIcon from './components/CloseIcon';\nimport CodeInput from './components/CodeInput';\nimport Countdown from './components/Countdown';\nimport CurrentPlaying from './components/CurrentPlaying';\nimport FacebookIcon from './components/FacebookIcon';\nimport InfoIcon from './components/InfoIcon';\nimport KebabIcon from './components/KebabIcon';\nimport PlayIcon from './components/PlayIcon';\nimport ShareIcon from './components/ShareIcon';\nimport ShareImageButton from './components/ShareImageButton';\nimport Tile from './components/Tile';\nimport TwitterIcon from './components/TwitterIcon';\nimport VolumeSlider from './components/VolumeSlider';\nimport { KEY_PREFIX } from './constants';\nimport LS from './utils/LS';\nimport alert from './utils/alert';\nimport blastConfetti from './utils/blastConfetti';\nimport compareWords from './utils/compareWords';\nimport copy from './utils/copy';\nimport fireEvent from './utils/fireEvent';\nimport prefersColorSchemeSupported from './utils/prefersColorSchemeSupported';\nimport usePageVisibility from './utils/usePageVisibility';\n\nconst py = pinyin;\nwindow.pinyin = pinyin;\n\nconst HARD_MODE = JSON.parse(LS.getItem(`${KEY_PREFIX}hardMode`) || false);\nconst MAX_GAMES_BEFORE_SHOW_DASHBOARD = 5000;\nconst MAX_LETTERS = 4;\nconst MAX_KEYS = HARD_MODE ? 40 : 20;\nconst MAX_STEPS = 6;\nconst MIN_IDIOMS = HARD_MODE ? 10 : 6;\n\nif (HARD_MODE) {\n  fireEvent('Hard mode');\n}\n\nconst ALL_IDIOMS = idiomsTxt.split('\\n');\nconst GAMES = gameIdioms.slice(1).map((row) => ({\n  id: row[0],\n  idiom: row[1],\n}));\n\nHowler.volume(JSON.parse(LS.getItem(`${KEY_PREFIX}volume`)) || 0.5);\nconst keypressStandard = new Howl({\n  src: [keypressStandardMp3],\n  preload: false,\n});\nconst keypressDelete = new Howl({\n  src: [keypressDeleteMp3],\n  preload: false,\n});\nconst keypressReturn = new Howl({\n  src: [keypressReturnMp3],\n  preload: false,\n});\n\nwindow.clearGames = () => {\n  try {\n    const { length } = localStorage;\n    for (let i = 0; i < length; i++) {\n      const key = localStorage.key(i);\n      if (key?.startsWith(KEY_PREFIX)) {\n        localStorage.removeItem(key);\n      }\n    }\n  } catch (e) {}\n};\n\nwindow.allGames = () => {\n  const allGames = new Map();\n  const { length } = localStorage;\n  for (let i = 0; i < length; i++) {\n    const key = localStorage.key(i);\n    if (key.startsWith(KEY_PREFIX)) {\n      const game = JSON.parse(localStorage.getItem(key));\n      allGames.set(key.replace(KEY_PREFIX, ''), game);\n    }\n  }\n  return allGames;\n};\n\nconst exportGameData = () => {\n  try {\n    const gameData = Object.entries(localStorage)\n      .filter(([k, v]) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && GAMES.find((g) => g.id === gameID);\n      })\n      .map(([k, v]) => {\n        const id = k.slice(KEY_PREFIX.length);\n        const data = JSON.parse(v);\n        return {\n          id,\n          ...data,\n        };\n      });\n    return gameData;\n  } catch (e) {}\n};\nconst importGameData = (gameData, overrides = false) => {\n  try {\n    gameData.forEach((game) => {\n      const { id, ...data } = game;\n      if (overrides || !localStorage.getItem(`${KEY_PREFIX}${id}`)) {\n        LS.setItem(`${KEY_PREFIX}${id}`, JSON.stringify(data));\n      }\n    });\n  } catch (e) {}\n};\n\nconst getBoardGameState = (boardStates) => {\n  const won = boardStates.some(\n    (row) => !!row.length && row.every((s) => s === '🟩'),\n  );\n  if (won) return 'won';\n  const lastRow = boardStates[boardStates.length - 1];\n  const lost = !!lastRow.length && !lastRow.every((s) => s === '🟩');\n  if (lost) return 'lost';\n  return null;\n};\n\n// v = letter values of the row\n// s = submitted state of the row (after user press enter)\nconst blankBoard = () =>\n  Array.from({ length: MAX_STEPS }, () => ({\n    v: Array.from({ length: MAX_LETTERS }, () => ''),\n    s: false,\n  }));\n\nconst getIdiomsKeys = (idiom, prevPassedIdioms, prevKeys, depth = 0) => {\n  let passedIdioms = prevPassedIdioms || new Set();\n  passedIdioms.add(idiom);\n  let keys = prevKeys || new Set();\n  const idiomLetters = idiom.split('');\n  idiomLetters.forEach((letter) => keys.add(letter));\n  let consecutiveFailures = 0;\n  lettersCycle: for (let i = 0; i < GAMES.length; i++) {\n    const letter = idiomLetters[(i + 1) % MAX_LETTERS];\n    const anotherIdiom = GAMES.find(\n      ({ idiom }) => !passedIdioms.has(idiom) && idiom.includes(letter),\n    );\n    if (anotherIdiom) {\n      for (let j = 0; j < anotherIdiom.idiom.length; j++) {\n        keys.add(anotherIdiom.idiom[j]);\n\n        if (keys.size >= MAX_KEYS) {\n          break lettersCycle;\n        }\n      }\n      passedIdioms.add(anotherIdiom.idiom);\n      consecutiveFailures = 0;\n    } else {\n      if (consecutiveFailures >= MAX_LETTERS + 1) {\n        // Too many failures, stop\n        break lettersCycle;\n      }\n      consecutiveFailures += 1;\n    }\n  }\n\n  // Try the next idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const nextIdiom = [...passedIdioms][++depth];\n    if (nextIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        nextIdiom,\n        passedIdioms,\n        keys,\n        depth,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Still not enough keys, choose a random idiom\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const randomIdiom = GAMES[Math.floor(Math.random() * GAMES.length)].idiom;\n    if (randomIdiom) {\n      const { passedIdioms: _passedIdioms, keys: _keys } = getIdiomsKeys(\n        randomIdiom,\n        passedIdioms,\n        keys,\n        0,\n      );\n      passedIdioms = _passedIdioms;\n      keys = _keys;\n    }\n  }\n\n  // Something very wrong happened\n  if (keys.size < MAX_KEYS || passedIdioms.size < MIN_IDIOMS) {\n    const gameID = GAMES.find((g) => g.idiom === idiom)?.id;\n    console.error(gameID, {\n      possibleIdioms: passedIdioms.size,\n      keySize: keys.size,\n      consecutiveFailures,\n    });\n  }\n\n  return {\n    passedIdioms,\n    keys,\n  };\n};\n\nconst startDate = new Date(2022, 0, 27); // 27 January 2022\nconst getTodayGame = () => {\n  const today = new Date().setHours(0, 0, 0, 0);\n  const diff = today - startDate;\n  const dayCount = Math.floor(diff / (1000 * 60 * 60 * 24));\n  return GAMES[Math.max(0, dayCount % GAMES.length)];\n};\n\nconst IdiomsDashboard = () => {\n  const { t } = useTranslation();\n  let wonCount = 0;\n  let lostCount = 0;\n  const idioms = GAMES.map((game) => {\n    // Get board from localStorage\n    const boardGame = JSON.parse(LS.getItem(`${KEY_PREFIX}${game.id}`));\n    if (boardGame && boardGame.gameState) {\n      const { board, gameState } = boardGame;\n      if (gameState === 'won') {\n        wonCount++;\n      } else if (gameState === 'lost') {\n        lostCount++;\n      }\n      return (\n        <a\n          href={`/#${game.id}`}\n          class={`board ${gameState}`}\n          title={`${game.id} (${gameState})`}\n        >\n          {gameState === 'won' ? '🟩' : '🟧'}\n        </a>\n      );\n    } else {\n      return (\n        <a href={`/#${game.id}`} class=\"board\" title={`${game.id}`}>\n          ⬜\n        </a>\n      );\n    }\n  });\n\n  useEffect(() => {\n    blastConfetti();\n  }, []);\n\n  return (\n    <>\n      <h2>\n        {t('dashboard.heading', {\n          gamesCount: MAX_GAMES_BEFORE_SHOW_DASHBOARD,\n        })}\n      </h2>\n      <p>{t('dashboard.subheading')}</p>\n      <p>\n        <Trans\n          i18nKey=\"dashboard.totalGamesPlayed\"\n          values={{\n            gamesCountOverTotal: `${wonCount + lostCount} / ${GAMES.length}`,\n          }}\n          components={[<b />]}\n        />\n        <br />\n        <Trans\n          i18nKey=\"dashboard.wonLost\"\n          values={{\n            wonCount,\n            lostCount,\n          }}\n          components={[<b />, <b />]}\n        />\n      </p>\n      <div class=\"boards\">{idioms}</div>\n    </>\n  );\n};\n\nexport function App() {\n  const { t, i18n } = useTranslation();\n\n  const [showDashboard, setShowDashboard] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const [showModal, setShowModal] = useState(false); // false | won | lost\n  const [showInfoModal, setShowInfoModal] = useState(false);\n\n  const [colorScheme, setColorScheme] = useState(\n    LS.getItem(`${KEY_PREFIX}colorScheme`) || 'auto',\n  );\n  useEffect(() => {\n    if (!prefersColorSchemeSupported) return;\n    const html = document.querySelector('html');\n    if (colorScheme === 'dark') {\n      html.classList.add('dark-mode');\n      html.classList.remove('light-mode');\n    } else if (colorScheme === 'light') {\n      html.classList.add('light-mode');\n      html.classList.remove('dark-mode');\n    } else {\n      html.classList.remove('dark-mode', 'light-mode');\n    }\n  }, [colorScheme]);\n\n  const [skipFirstTime, setSkipFirstTime] = useState(\n    LS.getItem(`${KEY_PREFIX}skipFirstTime`) || false,\n  );\n\n  const [currentGame, setCurrentGame] = useState(\n    GAMES.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n  );\n  useEffect(() => {\n    window.addEventListener('hashchange', () => {\n      setCurrentGame(\n        GAMES.find((g) => g.id === location.hash.slice(1)) || getTodayGame(),\n      );\n      setShowDashboard(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    keypressStandard.load();\n    keypressDelete.load();\n    keypressReturn.load();\n  }, []);\n\n  const [board, setBoard] = useState(\n    JSON.parse(LS.getItem(`${KEY_PREFIX}${currentGame.id}`))?.board ||\n      blankBoard(),\n  );\n  useEffect(() => {\n    const cachedGame = LS.getItem(`${KEY_PREFIX}${currentGame.id}`);\n    if (cachedGame) {\n      setBoard(JSON.parse(cachedGame).board);\n    } else {\n      setBoard(blankBoard());\n    }\n  }, [currentGame.id]);\n\n  const boardStates = useMemo(() => {\n    return board.map((row, i) => {\n      if (row.s) {\n        return compareWords(currentGame.idiom, row.v);\n      }\n      return [];\n    });\n  }, [board]);\n\n  // Save to localStorage every time board changes\n  useEffect(() => {\n    // Only store in localStorage if board has some values\n    if (board && board.some((row) => row.v.some((v) => v))) {\n      LS.setItem(\n        `${KEY_PREFIX}${currentGame.id}`,\n        JSON.stringify({\n          board,\n          gameState: getBoardGameState(boardStates),\n        }),\n      );\n    }\n  }, [boardStates]);\n\n  const [definition, setDefinition] = useState(null);\n  useEffect(() => {\n    setDefinition(null);\n//    fetch(\n//      `https://baidu-hanyu-idiom.cheeaun.workers.dev/?wd=${currentGame.idiom}`,\n//    )\n//      .then((r) => r.json())\n//      .then((r) => {\n//        if (r.definition) {\n//          setDefinition(r.definition);\n//        }\n//      })\n//      .catch(() => {});\n  }, [currentGame.idiom]);\n\n  const currentStep = board?.findIndex((row) => row.s === false) || 0;\n\n  const [currentGameKeys, currentGameKeysPinyin] = useMemo(() => {\n    const { keys } = getIdiomsKeys(currentGame.idiom);\n    const allPossibleIdioms = ALL_IDIOMS.filter((idiom) => {\n      // check if idiom contains 4 letters from keys\n      return idiom.split('').every((letter) => keys.has(letter));\n    });\n\n    // Pinyin mappings\n    const keysPinyin = new Map();\n    allPossibleIdioms.forEach((idiom) => {\n      const idiomPinyin = pinyin(idiom, { type: 'array' });\n      idiomPinyin.forEach((pinyin, i) => {\n        if (keysPinyin.has(idiom[i])) {\n          keysPinyin.get(idiom[i]).add(pinyin);\n        } else {\n          keysPinyin.set(idiom[i], new Set([pinyin]));\n        }\n      });\n    });\n    keysPinyin.forEach((pinyinSet, letter) => {\n      pinyinSet.add(py(letter)); // Add its own individual-letter pinyin\n    });\n\n    // SPOILER inside console.log!\n    const possibleIdioms = allPossibleIdioms\n      .map((idiom) => {\n        return `${idiom} (${py(idiom)})`;\n      })\n      .sort((a, b) => a.localeCompare(b, 'zh'));\n    if (console.groupCollapsed) {\n      console.groupCollapsed(\n        `${possibleIdioms.length} Possible Idioms [${currentGame.id}] (${keys.size} keys):`,\n      );\n      console.log(`${possibleIdioms\n        .map((idiom, i) => `${i + 1}. ${idiom}`)\n        .join('\\n')}\n\n🚨SPOILER🚨 Type 'HINTS' to see all hints. Type 'ANSWER' to see the answer.`);\n      console.groupEnd();\n    }\n    window.ANSWER = `${currentGame.idiom} (${py(currentGame.idiom)})`;\n\n    const sortedKeys = [...keys].sort((a, b) => a.localeCompare(b, 'zh'));\n    return [sortedKeys, keysPinyin];\n  }, [currentGame.idiom]);\n\n  const handleLetter = (letter, overwrite = false) => {\n    if (!board[currentStep]) return;\n    if (gameState) return;\n    setShowError(false);\n\n    const newBoard = [...board];\n    let columnIndex = newBoard[currentStep].v.findIndex((v) => v === '');\n    if (overwrite) {\n      if (columnIndex === -1) {\n        columnIndex = 3;\n      } else {\n        columnIndex--;\n      }\n    }\n    if (columnIndex !== -1) {\n      newBoard[currentStep].v[columnIndex] = letter;\n      setBoard(newBoard);\n    }\n  };\n\n  const correctKeys = new Set();\n  const presentKeys = new Set();\n  const absentKeys = new Set();\n  board.forEach((row, i) => {\n    if (!row.s) return;\n    row.v.forEach((letter, j) => {\n      const state = boardStates[i][j];\n      if (state === '🟩') {\n        correctKeys.add(letter);\n      } else if (state === '🟧') {\n        presentKeys.add(letter);\n      } else if (state === '⬜') {\n        absentKeys.add(letter);\n      }\n    });\n  });\n\n  const handleEnter = () => {\n    if (gameState) return;\n    console.log('handleEnter');\n    setShowError(false);\n\n    const row = board[currentStep];\n    if (!row) return;\n    const currentIdiom = row.v.join('');\n    const valid = ALL_IDIOMS.includes(currentIdiom);\n    if (valid) {\n      row.s = true;\n      setBoard([...board]);\n    } else {\n      setTimeout(() => {\n        setShowError(true);\n      }, 10);\n    }\n    console.log({ currentIdiom, valid });\n  };\n\n  const gameState = useMemo(() => {\n    return getBoardGameState(boardStates);\n  }, [boardStates]);\n\n  useEffect(() => {\n    let timeout;\n    if (gameState === 'won') {\n      timeout = setTimeout(() => {\n        setShowModal('won');\n      }, 600);\n    } else if (gameState === 'lost') {\n      setShowModal('lost');\n    } else {\n      setShowModal(false);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [gameState]);\n\n  const cachedTodayGame = useRef(getTodayGame());\n  const pageLoad = useRef(true);\n  const isPageVisible = usePageVisibility();\n  useEffect(() => {\n    let timeout;\n    if (isPageVisible) {\n      // Only show when NOT on first page load\n      if (!pageLoad.current) {\n        const todayGame = getTodayGame();\n        if (\n          todayGame.id !== cachedTodayGame.current?.id &&\n          /(won|lost)/i.test(gameState)\n        ) {\n          timeout = setTimeout(() => {\n            setShowModal(gameState);\n          }, 600);\n        }\n      }\n      pageLoad.current = false;\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [isPageVisible, gameState]);\n\n  const handleBackspace = () => {\n    if (gameState) return;\n    const newBoard = [...board];\n    // Get last column with value\n    const row = newBoard[currentStep];\n    if (!row || row.s) return;\n    let columnIndex = -1;\n    for (let i = row.v.length - 1; i >= 0; i--) {\n      if (row.v[i] !== '') {\n        columnIndex = i;\n        break;\n      }\n    }\n    if (columnIndex !== -1) {\n      row.v[columnIndex] = '';\n      setBoard(newBoard);\n    }\n  };\n\n  useEffect(() => {\n    const handleKey = (e) => {\n      if (gameState) return;\n      if (e.metaKey || e.ctrlKey || !e.key) {\n        return;\n      }\n      const key = e.key.toLowerCase();\n      if (key === 'enter') {\n        e.preventDefault();\n        e.stopPropagation();\n        handleEnter();\n      } else if (key === 'backspace') {\n        e.preventDefault();\n        handleBackspace();\n      } else if (/^arrow(left|right)/i.test(key)) {\n        // This will cycle through all letters with same starting pinyin letter\n        const row = board[currentStep];\n        const value = [...row.v].reverse().find((v) => v !== '');\n        if (value) {\n          const pinyinLetter = py(value)[0];\n\n          const possibleLettersSet = new Set();\n          currentGameKeysPinyin.forEach((pinyins, letter) => {\n            pinyins.forEach((pinyin) => {\n              const firstPinyinChar = pinyin[0];\n              if (\n                firstPinyinChar.localeCompare(pinyinLetter, 'en', {\n                  sensitivity: 'base',\n                }) === 0\n              ) {\n                possibleLettersSet.add(letter);\n              }\n            });\n          });\n          const possibleLetters = [...possibleLettersSet];\n\n          if (possibleLetters.length <= 1) return;\n          const letterIndex = possibleLetters.indexOf(value);\n          const nextLetter =\n            key === 'arrowright'\n              ? possibleLetters[(letterIndex + 1) % possibleLetters.length]\n              : possibleLetters[\n                  (letterIndex + possibleLetters.length - 1) %\n                    possibleLetters.length\n                ];\n          if (nextLetter) {\n            handleLetter(nextLetter, true);\n          }\n        }\n      } else if (/[a-z]/i.test(key)) {\n        // Type \"a\" will trigger the first letter pinyin that starts with \"ā\"\n        let breakLoop = false;\n        currentGameKeysPinyin.forEach((pinyins, letter) => {\n          if (breakLoop) return;\n          pinyins.forEach((pinyin) => {\n            if (breakLoop) return;\n            const firstPinyinChar = pinyin[0];\n            if (\n              firstPinyinChar.localeCompare(key, 'en', {\n                sensitivity: 'base',\n              }) === 0\n            ) {\n              e.preventDefault();\n              breakLoop = true;\n              handleLetter(letter);\n            }\n          });\n        });\n      }\n\n      const $board = document.getElementById('board');\n      if ($board?.querySelector) {\n        const $currentRow = $board.querySelector(\n          `.row:nth-child(${currentStep + 1})`,\n        );\n        if ($currentRow?.scrollIntoView) {\n          $currentRow.scrollIntoView({\n            behavior: 'smooth',\n          });\n        }\n      }\n    };\n    document.addEventListener('keydown', handleKey);\n    return () => {\n      document.removeEventListener('keydown', handleKey);\n    };\n  }, [currentGameKeys, currentGameKeysPinyin, board, currentStep, gameState]);\n\n  const permalink = location.origin + location.pathname + '#' + currentGame.id;\n  const shortPermalink =\n    location.host + location.pathname + '#' + currentGame.id;\n  const emojiResults = boardStates\n    .map((row) => row.join(''))\n    .join('\\n')\n    .trim();\n  const attempts = gameState === 'won' ? emojiResults.split('\\n').length : 'X';\n  const attemptsText = `${attempts}/${MAX_STEPS}`;\n  const shareText = `${t('app.title')} [${currentGame.id}]${\n    HARD_MODE ? ' 🔥' : ''\n  } ${attemptsText}\\n\\n${emojiResults}`;\n  const shareTextWithLink = `${shareText}\\n\\n${shortPermalink}`;\n\n  const hints = useMemo(() => {\n    const hints = [];\n    const letters = currentGame.idiom.split('');\n\n    // 1. Absent letters hints\n    const absentHints = currentGameKeys\n      .filter((k) => {\n        return !letters.includes(k) && !absentKeys.has(k);\n      })\n      .slice(0, -1) // Don't reveal at least one letter\n      .slice(0, 3) // But still max 3 letters\n      .map((letter) => {\n        return t('hints.absentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...absentHints);\n\n    // 2. Definition hints\n    if (\n      definition?.zh &&\n      letters.filter((c) => definition.zh.includes(c)).length <= 2\n      // Only show hint if definition contains 2 or less of the characters in the idiom\n      // Else, the definition basically revealed the answer\n    ) {\n      hints.push(`ℹ️ ${definition.zh}`);\n    }\n    if (definition?.en) hints.push(`ℹ️ ${definition.en}`);\n\n    // 3. Letter hints\n    const letterHints = letters\n      .filter((c) => !correctKeys.has(c) && !presentKeys.has(c))\n      .slice(0, -1) // Don't reveal at least one letter\n      .map((letter) => {\n        return t('hints.presentLetter', {\n          letter,\n          pinyin: py(letter),\n        });\n      })\n      .sort(() => Math.random() - 0.5);\n    hints.push(...letterHints);\n\n    // 4. Pinyin hints\n    const pinyinHint = py(currentGame.idiom, {\n      pattern: 'first',\n      type: 'array',\n    }).join('');\n    hints.push(t('hints.abbreviatedPinyin', { pinyinHint }));\n\n    window.HINTS = hints;\n\n    return hints;\n  }, [currentGame.idiom, definition]);\n  const hintIndex = useRef(0);\n  useEffect(() => {\n    hintIndex.current = 0;\n  }, [currentGame.idiom]);\n  const showHint = () => {\n    if (gameState) return;\n    const hint = hints[hintIndex.current];\n    hintIndex.current = (hintIndex.current + 1) % hints.length;\n    alert(hint);\n  };\n\n  // Limit number of toasts\n  // https://github.com/timolins/react-hot-toast/issues/31#issuecomment-803359550\n  const { toasts } = useToasterStore();\n  const TOAST_LIMIT = 1;\n  useEffect(() => {\n    toasts\n      .filter((t, i) => t.visible && i >= TOAST_LIMIT)\n      .forEach((t) => toast.dismiss(t.id));\n  }, [toasts]);\n\n  const gamesPlayedCount = useMemo(() => {\n    // Only count games played if info modal is open\n    if (!showInfoModal) return;\n    try {\n      const keys = Object.keys(localStorage).filter((k) => {\n        const isPrefixed = k.startsWith(KEY_PREFIX);\n        if (!isPrefixed) return false;\n        const gameID = k.slice(KEY_PREFIX.length);\n        return isPrefixed && GAMES.find((g) => g.id === gameID);\n      });\n      return keys.length;\n    } catch (e) {}\n  }, [showInfoModal]);\n\n  useEffect(() => {\n    if (!gamesPlayedCount || gamesPlayedCount < 10) return;\n    const precision = gamesPlayedCount < 100 ? 1 : 2;\n    const count = +gamesPlayedCount.toPrecision(precision);\n    fireEvent('Games Played', {\n      props: {\n        count,\n      },\n    });\n  }, [gamesPlayedCount]);\n\n  const GamesCount = useCallback(\n    () => (\n      <b>\n        {gamesPlayedCount}\n        {gamesPlayedCount >= MAX_GAMES_BEFORE_SHOW_DASHBOARD && (\n          <>\n            {' '}\n            /{' '}\n            <a\n              href=\"#\"\n              onClick={(e) => {\n                e.preventDefault();\n                setShowInfoModal(false);\n                setShowDashboard(true);\n              }}\n            >\n              {GAMES.length}\n            </a>\n          </>\n        )}\n      </b>\n    ),\n    [gamesPlayedCount],\n  );\n\n  return (\n    <>\n      <header>\n        <div class=\"inner\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowInfoModal(true);\n            }}\n          >\n            <InfoIcon width=\"16\" height=\"16\" />\n          </button>\n          <span>\n            <h1>{t('app.title')}</h1>\n          </span>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setShowModal(gameState || 'play');\n            }}\n          >\n            {gameState ? (\n              t('common.play')\n            ) : (\n              <KebabIcon width=\"16\" height=\"16\" />\n            )}\n          </button>\n        </div>\n      </header>\n      <div id=\"board\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        {board.map((row, index) => {\n          const pinyins = pinyin(row.v.join(''), { type: 'array' });\n          return (\n            <div\n              className={`row ${\n                currentStep === index && showError ? 'error' : ''\n              } ${currentStep === index ? 'current' : ''} ${boardStates[\n                index\n              ].join('')}`}\n              key={index}\n            >\n              {row.v.map((letter, i) => (\n                <Tile\n                  key={i}\n                  letter={letter}\n                  pinyin={pinyins[i]}\n                  state={boardStates[index][i]}\n                />\n              ))}\n            </div>\n          );\n        })}\n      </div>\n      <div id=\"keyboard\" class={`${gameState} ${HARD_MODE ? 'hard-mode' : ''}`}>\n        <div class=\"inner\">\n          <div class=\"keys\">\n            {currentGameKeys.map((key, i) => (\n              <button\n                class={`${correctKeys.has(key) ? '🟩' : ''} ${\n                  presentKeys.has(key) ? '🟧' : ''\n                } ${absentKeys.has(key) ? '⬜' : ''}`}\n                type=\"button\"\n                tabIndex={-1}\n                onPointerDown={() => {\n                  keypressStandard.play();\n                }}\n                onClick={() => {\n                  handleLetter(key);\n                }}\n              >\n                <ruby>\n                  {key}\n                  <rp>(</rp>\n                  <rt>\n                    {currentGameKeysPinyin.has(key)\n                      ? [...currentGameKeysPinyin.get(key)]\n                          .sort((a, b) => a.localeCompare(b, 'zh'))\n                          .join(' ⸱ ')\n                      : py(key)}\n                  </rt>\n                  <rp>)</rp>\n                </ruby>\n              </button>\n            ))}\n          </div>\n          <div class=\"row\">\n            <button\n              type=\"button\"\n              onPointerDown={() => {\n                keypressReturn.play();\n              }}\n              onClick={() => {\n                handleEnter();\n              }}\n              tabIndex={-1}\n            >\n              {t('common.enter')}\n            </button>\n            {HARD_MODE ? (\n              <b class=\"hard\">{t('ui.hardMode')}</b>\n            ) : (\n              <button type=\"button\" class=\"stuck\" onClick={showHint}>\n                {t('ui.hint')}\n              </button>\n            )}\n            <button\n              type=\"button\"\n              onPointerDown={() => {\n                keypressDelete.play();\n              }}\n              onClick={() => {\n                handleBackspace();\n              }}\n              tabIndex={-1}\n            >\n              <BackspaceIcon width=\"24\" height=\"24\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"modal\"\n        class={showModal ? 'appear' : ''}\n        onClick={(e) => {\n          if (e.target === e.currentTarget) setShowModal(null);\n        }}\n      >\n        <CloseIcon\n          height=\"24\"\n          width=\"24\"\n          class=\"close\"\n          onClick={() => {\n            setShowModal(null);\n          }}\n        />\n        <div class=\"content\">\n          <h2>\n            {showModal === 'won'\n              ? '🎉🎉🎉'\n              : showModal === 'lost'\n              ? '😭😭😭'\n              : '🐯🐯🐯'}\n          </h2>\n          {showModal === 'play' && (\n            <p class=\"block\">\n              {t('ui.idiomId')}{' '}\n              <CodeInput code={currentGame.id} url={permalink} />\n            </p>\n          )}\n          {/(won|lost)/i.test(showModal) && (\n            <>\n              <p class=\"block\">\n                <b class=\"answer\">\n                  <ruby>\n                    {currentGame.idiom}\n                    <rp>(</rp>\n                    <rt>{py(currentGame.idiom)}</rt>\n                    <rp>)</rp>\n                  </ruby>\n                </b>\n                <div class=\"definition\">\n                  {definition?.zh\n                    ? definition.zh.split('').map((c) => {\n                        const p = py(c);\n                        if (p === c) return c;\n                        return (\n                          <ruby>\n                            {c}\n                            <rp>(</rp>\n                            <rt>{py(c)}</rt>\n                            <rp>)</rp>\n                          </ruby>\n                        );\n                      })\n                    : ''}\n                  {definition?.zh && definition?.en && <br />}\n                  {definition?.en}\n                </div>\n                <small>\n                  <a\n                    href={`https://hanyu.baidu.com/s?wd=${currentGame.idiom}&from=zici`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.baidu')}\n                  </a>\n                  &nbsp; &nbsp;\n                  <a\n                    href={`https://www.zdic.net/hans/${currentGame.idiom}`}\n                    target=\"_blank\"\n                  >\n                    📖 {t('glossary.zdic')}\n                  </a>\n                </small>\n              </p>\n              <p class=\"block warning\">{t('ui.avoidSpoilers')}</p>\n              <div class=\"block\">\n                <div>\n                  <button\n                    id=\"share\"\n                    onClick={async () => {\n                      try {\n                        if (\n                          // Edge/ or Edg/\n                          /edge?\\//i.test(navigator.userAgent) ||\n                          // Windows\n                          /windows/.test(navigator.userAgent)\n                        ) {\n                          throw new Error(\n                            'Web Share API not working well here',\n                          );\n                        }\n                        copy(shareTextWithLink);\n                        await navigator.share({ text: shareTextWithLink });\n                      } catch (e) {\n                        copy(shareTextWithLink, () => {\n                          alert(t('ui.copiedResults'));\n                        });\n                      }\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'share',\n                        },\n                      });\n                    }}\n                  >\n                    {t('common.share')} <ShareIcon width=\"16\" height=\"16\" />\n                  </button>\n                  &nbsp;\n                  <ShareImageButton\n                    id={currentGame.id}\n                    header={t('app.title')}\n                    footer={`[${currentGame.id}]${\n                      HARD_MODE ? ' 🔥' : ''\n                    } ${attemptsText}`}\n                    boardStates={boardStates}\n                  />\n                  &nbsp;\n                  <a\n                    class=\"button facebook\"\n                    href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\n                      permalink,\n                    )}&hashtag=${encodeURIComponent('#chengyuwordle')}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      copy(shareTextWithLink);\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'facebook',\n                        },\n                      });\n                    }}\n                  >\n                    <FacebookIcon width=\"16\" height=\"16\" />\n                  </a>\n                  &nbsp;\n                  <a\n                    class=\"button tweet\"\n                    href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(\n                      shareTextWithLink,\n                    )}`}\n                    target=\"_blank\"\n                    onClick={() => {\n                      fireEvent('Click: Share', {\n                        props: {\n                          type: 'twitter',\n                        },\n                      });\n                    }}\n                  >\n                    <TwitterIcon\n                      width=\"16\"\n                      height=\"16\"\n                      title={t('common.tweet')}\n                    />\n                  </a>\n                </div>\n                <p>\n                  {t('ui.idiomId')}{' '}\n                  <CodeInput code={currentGame.id} url={permalink} />\n                </p>\n              </div>\n            </>\n          )}\n          {gameState === 'won' && attempts <= 2 && !HARD_MODE && (\n            <p\n              class=\"block alert\"\n              onClick={() => {\n                setShowModal(null);\n                setTimeout(() => {\n                  setShowInfoModal(true);\n                }, 300);\n              }}\n            >\n              {t('ui.easyEnableHardMode')}\n            </p>\n          )}\n          {showModal === 'won' &&\n            gameState === 'won' &&\n            attempts >= 5 &&\n            blastConfetti()}\n          <div class=\"block\">\n            {/won|lost/i.test(gameState) &&\n              getTodayGame().id === currentGame.id && (\n                <p>\n                  <big>\n                    <Trans\n                      i18nKey=\"ui.nextIdiom\"\n                      components={[<Countdown />]}\n                    />\n                  </big>\n                </p>\n              )}\n            <div>\n              {getTodayGame().id !== currentGame.id && (\n                <>\n                  <a href=\"./\" class=\"button strong\">\n                    <PlayIcon width={20} height={20} /> {t('ui.playTodayGame')}\n                  </a>\n                  <br />\n                </>\n              )}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Random');\n                  const yes = confirm(t('ui.confirmRandom'));\n                  if (yes) {\n                    const rand = Math.round(Math.random() * (GAMES.length - 1));\n                    const randGame = GAMES[rand];\n                    location.hash = `#${randGame.id}`;\n                    setShowModal(null);\n                    fireEvent('Game load: Random');\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.random')}\n              </button>{' '}\n              <button\n                type=\"button\"\n                onClick={() => {\n                  fireEvent('Click: Idiom ID');\n                  // Ask user for idiom ID, load game if ID is valid\n                  let id = prompt(t('ui.promptIdiom'));\n                  try {\n                    id = new URL(id).hash.slice(1);\n                  } catch (e) {}\n                  if (id) {\n                    const game = GAMES.find((g) => g.id === id);\n                    if (game) {\n                      location.hash = `#${game.id}`;\n                      setShowModal(null);\n                      fireEvent('Game load: Idiom ID');\n                    } else {\n                      alert('Invalid idiom ID');\n                    }\n                  }\n                }}\n              >\n                <PlayIcon width={20} height={20} /> {t('common.choose')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"info-modal\"\n        class={showInfoModal || !skipFirstTime ? 'appear' : ''}\n      >\n        {skipFirstTime && (\n          <CloseIcon\n            height=\"32\"\n            width=\"32\"\n            class=\"close\"\n            onClick={() => {\n              setShowInfoModal(false);\n            }}\n          />\n        )}\n        <div class=\"content\">\n          {prefersColorSchemeSupported && (\n            <p class=\"color-scheme-selector\">\n              <button\n                type=\"button\"\n                class={colorScheme === 'dark' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'dark');\n                  setColorScheme('dark');\n                }}\n              >\n                🌑\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'auto' ? 'active' : ''}\n                onClick={() => {\n                  LS.removeItem(`${KEY_PREFIX}colorScheme`);\n                  setColorScheme('auto');\n                }}\n              >\n                🌓\n              </button>{' '}\n              <button\n                type=\"button\"\n                class={colorScheme === 'light' ? 'active' : ''}\n                onClick={() => {\n                  LS.setItem(`${KEY_PREFIX}colorScheme`, 'light');\n                  setColorScheme('light');\n                }}\n              >\n                🌕\n              </button>\n            </p>\n          )}{' '}\n          <p class=\"locale-selector\">\n            🌐{' '}\n            <a\n              href=\"./?lng=en\"\n              hreflang=\"en\"\n              rel={i18n.resolvedLanguage === 'en' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'en' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('en');\n              }}\n            >\n              English\n            </a>{' '}\n            &#8901;{' '}\n            <a\n              href=\"./?lng=zh-CN\"\n              hreflang=\"zh-CN\"\n              rel={i18n.resolvedLanguage === 'zh' ? undefined : 'alternate'}\n              class={`${i18n.resolvedLanguage === 'zh' ? 'selected' : ''}`}\n              onClick={(e) => {\n                e.preventDefault();\n                i18n.changeLanguage('zh-CN');\n              }}\n            >\n              中文\n            </a>\n          </p>\n          {skipFirstTime && gamesPlayedCount > 0 && (\n            <div id=\"stats\">\n              <p>\n                <Trans i18nKey=\"ui.gamesPlayed\" components={[<GamesCount />]} />\n              </p>\n              <div id=\"config\">\n                <p>\n                  <label>\n                    {t('ui.hardMode')}\n                    <Switch\n                      defaultChecked={HARD_MODE}\n                      onChange={(checked) => {\n                        LS.setItem(\n                          `${KEY_PREFIX}hardMode`,\n                          checked ? 'true' : 'false',\n                        );\n                        setTimeout(() => {\n                          location.reload();\n                        }, 310); // Wait for Switch to animate\n                      }}\n                    />\n                  </label>\n                </p>\n                <p>\n                  <label>\n                    {t('ui.soundEffects')}\n                    <VolumeSlider class=\"config-slider\" />\n                  </label>\n                </p>\n              </div>\n            </div>\n          )}\n          <h2>{t('howToPlay.heading')}</h2>\n          <p>{t('howToPlay.how1')}</p>\n          <p>{t('howToPlay.how2')}</p>\n          <p>{t('howToPlay.how3')}</p>\n          <div class=\"example-idiom\">\n            {'九牛一毛'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 0 ? '🟩' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotCorrect')}</p>\n          <div class=\"example-idiom\">\n            {'理所当然'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 1 ? '🟧' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotPresent')}</p>\n          <div class=\"example-idiom\">\n            {'爱不释手'.split('').map((letter, i) => (\n              <Tile key={letter} letter={letter} state={i === 2 ? '⬜' : ''} />\n            ))}\n          </div>\n          <p>{t('howToPlay.spotAbsent')}</p>\n          <p>{t('howToPlay.how4')}</p>\n          {skipFirstTime ? (\n            <>\n              <h2>{t('about.heading')}</h2>\n              <p>\n                <Trans\n                  i18nKey=\"about.about1\"\n                  components={[\n                    <a\n                      href=\"https://github.com/cheeaun/chengyu-wordle/\"\n                      target=\"_blank\"\n                    />,\n                    <a href=\"https://cheeaun.com/projects/\" target=\"_blank\" />,\n                    <a\n                      href=\"https://www.nytimes.com/games/wordle/\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <p>\n                <Trans\n                  i18nKey=\"about.about2\"\n                  components={[\n                    <a\n                      href=\"https://www.buymeacoffee.com/cheeaun\"\n                      target=\"_blank\"\n                    />,\n                  ]}\n                />\n              </p>\n              <h2>{t('feedback.heading')}</h2>\n              <ul>\n                <li>\n                  <a href=\"https://t.me/+ykuhfiImLd1kNjk1\" target=\"_blank\">\n                    {t('feedback.telegramGroup')}\n                  </a>\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubDiscussions\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/discussions\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <Trans\n                    i18nKey=\"feedback.githubIssues\"\n                    components={[\n                      <a\n                        href=\"https://github.com/cheeaun/chengyu-wordle/issues\"\n                        target=\"_blank\"\n                      />,\n                    ]}\n                  />\n                </li>\n                <li>\n                  <a href=\"https://twitter.com/cheeaun\" target=\"_blank\">\n                    {t('feedback.twitter')}\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://t.me/cheeaun\" target=\"_blank\">\n                    {t('feedback.telegram')}\n                  </a>\n                </li>\n              </ul>\n              <details id=\"debugging-container\">\n                <summary>\n                  {t('debugging.heading')} ({__COMMIT_HASH__})\n                </summary>\n                <div>\n                  Game data:{' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      // Construct URL\n                      const data = exportGameData();\n                      const str = JSON.stringify({\n                        version: 1,\n                        exportDate: new Date(),\n                        data,\n                      });\n                      const bytes = new TextEncoder().encode(str);\n                      const blob = new Blob([bytes], {\n                        type: 'application/json;charset=utf-8',\n                      });\n                      const url = URL.createObjectURL(blob);\n\n                      // Trigger download\n                      const $a = document.createElement('a');\n                      document.body.appendChild($a);\n                      $a.style = 'display: none';\n                      $a.href = url;\n                      $a.download = 'chengyu-wordle.gamedata.json';\n                      $a.click();\n\n                      // Clean up\n                      URL.revokeObjectURL(url);\n                      $a.remove();\n                    }}\n                  >\n                    Export\n                  </button>{' '}\n                  <label class=\"input-file-button\">\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={(event) => {\n                        if (window.FileReader) {\n                          if (confirm('Are you sure you want to import?')) {\n                            try {\n                              const fileList = event.target.files;\n                              const file = fileList[0];\n                              const reader = new FileReader();\n                              reader.addEventListener('load', (e) => {\n                                const gameData = JSON.parse(\n                                  e.target.result,\n                                ).data;\n                                const overrides = confirm(\n                                  'If there are conflicting games data, override them? (Cancel to keep them)',\n                                );\n                                importGameData(gameData, overrides);\n                              });\n                              reader.readAsText(file);\n                            } catch (e) {\n                              alert('Unable to import.');\n                            }\n                          }\n                        } else {\n                          alert(\n                            'Import feature is not supported by the current browser.',\n                          );\n                        }\n                      }}\n                    />\n                    <button type=\"button\">Import</button>\n                  </label>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmResetGame'))) {\n                      LS.removeItem(KEY_PREFIX + currentGame.id);\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.resetGame')}\n                </button>\n                &nbsp;\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (confirm(t('debugging.confirmClearDB'))) {\n                      clearGames();\n                      location.reload();\n                    }\n                  }}\n                >\n                  {t('debugging.clearDB')}\n                </button>\n              </details>\n            </>\n          ) : (\n            <p>\n              <button\n                type=\"button\"\n                class=\"large\"\n                onClick={() => {\n                  setShowInfoModal(false);\n                  LS.setItem(KEY_PREFIX + 'skipFirstTime', 1);\n                  setSkipFirstTime(true);\n                }}\n              >\n                <PlayIcon width=\"20\" height=\"20\" /> {t('ui.startPlay')}\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n      {showDashboard && (\n        <div id=\"dashboard-modal\">\n          <CloseIcon\n            height=\"24\"\n            width=\"24\"\n            class=\"close\"\n            onClick={() => {\n              setShowDashboard(false);\n            }}\n          />\n          <IdiomsDashboard />\n        </div>\n      )}\n      <Toaster\n        containerStyle={{\n          top: '3.5em',\n        }}\n        toastOptions={{\n          className: 'toast',\n          style: {\n            pointerEvents: 'none',\n          },\n        }}\n      />\n    </>\n  );\n}\n","export default \"__VITE_ASSET__8f78f698__\"","export default \"__VITE_ASSET__faeb84ff__\"","export default \"__VITE_ASSET__cbbc8f21__\"","import '@fontsource/nunito/400.css';\nimport '@fontsource/nunito/700.css';\nimport 'rc-switch/assets/index.css';\n\nimport './index.css';\n\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { render } from 'preact';\nimport { initReactI18next } from 'react-i18next';\n\nimport en from '../i18n/en.json';\nimport zhCN from '../i18n/zh-CN.json';\n\nimport { App } from './app';\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n      zh: {\n        translation: zhCN,\n      },\n    },\n    fallbackLng: 'en',\n    debug: /localhost/i.test(location.hostname),\n    detection: {\n      // localStorage is default\n      lookupLocalStorage: 'locale',\n      lookupCookie: 'locale',\n    },\n    interpolation: {\n      escapeValue: false, // not needed for React\n    },\n  })\n  .then((t) => {\n    const updateLocale = () => {\n      document.documentElement.lang = i18n.resolvedLanguage;\n      document.title = document.querySelector(\n        'meta[property=\"og:title\"]',\n      ).content = t('app.title');\n      document.querySelector('meta[name=\"description\"]').content =\n        document.querySelector('meta[property=\"og:description\"]').content =\n          t('app.description');\n    };\n    i18n.on('languageChanged', updateLocale);\n    updateLocale();\n  });\n\nrender(<App />, document.getElementById('app'));\n","export default (hiddenWord, testWord) => {\n  if (hiddenWord == null || testWord == null) return [];\n  const letters1 = typeof testWord === 'string' ? testWord.split('') : testWord;\n  const letters2 =\n    typeof hiddenWord === 'string' ? hiddenWord.split('') : hiddenWord;\n  const lettersLength = letters1.length;\n  const states = Array.from({ length: lettersLength }, () => '⬜');\n  if (lettersLength !== letters2.length) {\n    throw new Error('Words must have the same length');\n  }\n  const correctLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 === l2) {\n      states[i] = '🟩';\n      correctLetterIndices.push(i);\n    }\n  }\n  const presentLetterIndices = [];\n  for (let i = 0; i < lettersLength; i++) {\n    const l1 = letters1[i];\n    const l2 = letters2[i];\n    if (l1 !== l2) {\n      const l1Index = letters2.findIndex(\n        (l, index) =>\n          l === l1 &&\n          !correctLetterIndices.includes(index) &&\n          !presentLetterIndices.includes(index),\n      );\n      if (l1Index !== -1) {\n        states[i] = '🟧';\n        presentLetterIndices.push(l1Index);\n      }\n    }\n  }\n  return states;\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nexport default () => {\n  let hidden, visibilityChange;\n  if ('hidden' in document) {\n    hidden = 'hidden';\n    visibilityChange = 'visibilitychange';\n  } else if ('mozHidden' in document) {\n    hidden = 'mozHidden';\n    visibilityChange = 'mozvisibilitychange';\n  } else if ('webkitHidden' in document) {\n    hidden = 'webkitHidden';\n    visibilityChange = 'webkitvisibilitychange';\n  }\n\n  const [isVisible, setIsVisible] = useState(!document[hidden]);\n  useEffect(() => {\n    const handleVisibilityChange = () => setIsVisible(!document[hidden]);\n    try {\n      document.addEventListener(visibilityChange, handleVisibilityChange);\n    } catch (e) {}\n    return () => {\n      try {\n        document.removeEventListener(visibilityChange, handleVisibilityChange);\n      } catch (e) {}\n    };\n  }, []);\n\n  return isVisible;\n};\n"],"names":["jsx","jsxRuntime.jsx","jsxs","jsxRuntime.jsxs","Fragment","jsxRuntime.Fragment","props","_jsx","viewBox","fill","d","_jsxs","text","toast","fn","navigator","clipboard","writeText","then","catch","e","toClipboard","window","plausible","code","url","t","useTranslation","type","readOnly","value","class","onClick","target","focus","select","nextDay","Date","setHours","useState","hours","minutes","setMinutes","seconds","setSeconds","isNow","setIsNow","timer","setInterval","diff","Math","floor","toString","padStart","clearInterval","href","stroke","matchMedia","media","header","footer","boardStates","id","imageRef","useRef","imageSrc","setImageSrc","imageOpts","canvasWidth","canvasHeight","quality","mediaChanged","setMediaChanged","prefersColorSchemeSupported","colorSchemeChange","event","matches","addEventListener","addListener","removeEventListener","removeListener","isSubscribed","current","dataURL","fileName","download","DownloadIcon","width","height","ref","map","row","letter","py","pinyin","state","style","opacity","title","KEY_PREFIX","LS","key","localStorage","getItem","setItem","removeItem","Howler","volume","setVolume","min","max","step","onChange","isNaN","end","now","colors","frame","confetti","particleCount","angle","spread","origin","x","y","shapes","disableForReducedMotion","requestAnimationFrame","HARD_MODE","JSON","parse","MAX_KEYS","MIN_IDIOMS","ALL_IDIOMS","idiomsTxt","split","GAMES","gameIdioms","slice","idiom","keypressStandard","Howl","src","preload","keypressDelete","keypressReturn","clearGames","length","i","startsWith","allGames","Map","game","set","replace","getBoardGameState","won","some","every","s","lastRow","lost","blankBoard","Array","from","v","getIdiomsKeys","prevPassedIdioms","prevKeys","depth","passedIdioms","Set","add","keys","idiomLetters","forEach","consecutiveFailures","anotherIdiom","find","has","includes","j","size","MAX_LETTERS","nextIdiom","_toConsumableArray","_passedIdioms","_keys","randomIdiom","random","gameID","g","error","possibleIdioms","keySize","startDate","getTodayGame","dayCount","IdiomsDashboard","wonCount","lostCount","idioms","boardGame","gameState","board","gamesCount","Trans","i18nKey","values","gamesCountOverTotal","components","use","LanguageDetector","initReactI18next","init","resources","en","translation","zh","zhCN","fallbackLng","debug","test","location","hostname","detection","lookupLocalStorage","lookupCookie","interpolation","escapeValue","updateLocale","documentElement","lang","i18n","resolvedLanguage","document","querySelector","content","on","showDashboard","setShowDashboard","showError","setShowError","showModal","setShowModal","showInfoModal","setShowInfoModal","colorScheme","setColorScheme","html","classList","remove","skipFirstTime","setSkipFirstTime","hash","currentGame","setCurrentGame","load","setBoard","cachedGame","useMemo","hiddenWord","testWord","letters1","letters2","lettersLength","states","Error","correctLetterIndices","push","presentLetterIndices","l1","l2","l1Index","findIndex","l","index","compareWords","stringify","definition","setDefinition","currentStep","allPossibleIdioms","filter","keysPinyin","get","pinyinSet","sort","a","b","localeCompare","console","groupCollapsed","log","join","groupEnd","ANSWER","currentGameKeys","currentGameKeysPinyin","handleLetter","overwrite","newBoard","columnIndex","correctKeys","presentKeys","absentKeys","handleEnter","currentIdiom","valid","timeout","setTimeout","cachedTodayGame","pageLoad","isPageVisible","hidden","visibilityChange","isVisible","setIsVisible","useEffect","handleVisibilityChange","usePageVisibility","handleBackspace","handleKey","metaKey","ctrlKey","toLowerCase","preventDefault","stopPropagation","reverse","pinyinLetter","possibleLettersSet","pinyins","sensitivity","possibleLetters","letterIndex","indexOf","nextLetter","breakLoop","$board","getElementById","$currentRow","scrollIntoView","behavior","permalink","pathname","shortPermalink","host","emojiResults","trim","attempts","attemptsText","shareText","shareTextWithLink","hints","letters","absentHints","k","c","letterHints","pinyinHint","pattern","HINTS","hintIndex","toasts","useToasterStore","visible","dismiss","gamesPlayedCount","Object","isPrefixed","precision","count","toPrecision","GamesCount","useCallback","InfoIcon","KebabIcon","className","Tile","tabIndex","onPointerDown","play","hint","BackspaceIcon","currentTarget","CloseIcon","CodeInput","userAgent","_context","share","ShareIcon","ShareImageButton","encodeURIComponent","FacebookIcon","TwitterIcon","blastConfetti","Countdown","PlayIcon","confirm","rand","round","randGame","prompt","URL","hreflang","rel","undefined","changeLanguage","Switch","defaultChecked","checked","reload","VolumeSlider","__COMMIT_HASH__","data","entries","exportGameData","str","version","exportDate","bytes","TextEncoder","encode","blob","Blob","createObjectURL","$a","createElement","body","appendChild","click","revokeObjectURL","accept","FileReader","file","files","reader","gameData","overrides","result","readAsText","Toaster","containerStyle","top","toastOptions","pointerEvents"],"mappings":"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"}